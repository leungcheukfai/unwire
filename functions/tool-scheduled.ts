import { revalidateTag } from "next/cache";
import { config } from "~/config";
import EmailToolScheduled from "~/emails/tool-scheduled";
import { sendEmails } from "~/lib/email";
import { generateContent } from "~/lib/generate-content";
import { uploadFavicon, uploadScreenshot } from "~/lib/media";
import { firecrawlClient } from "~/services/firecrawl";
import { inngest } from "~/services/inngest";
import { prisma } from "~/services/prisma";

export const toolScheduled = inngest.createFunction(
  { id: "tool.scheduled", concurrency: { limit: 2 } },
  { event: "tool.scheduled" },

  async ({ event, step, logger }) => {
    const tool = await step.run("find-tool", async () => {
      return prisma.tool.findUniqueOrThrow({
        where: { slug: event.data.slug },
      });
    });

    // Scrape website
    // const scrapedData = await step.run("scrape-website", async () => {
    //   const data = await firecrawlClient.scrapeUrl(tool.website, {
    //     formats: ["markdown"],
    //     headers: { "User-Agent": "Mozilla/5.0 (compatible; MyApp/1.0)" },
    //   });

    //   if (!data.success) {
    //     throw new Error(data.error);
    //   }

    //   logger.info(`Scraped website for ${tool.name}`, { data });

    //   return data;
    // });

    // Run steps in parallel
    step.run("generate-content", async () => {
      const { categories, alternatives, ...content } = await generateContent({
        success: true,
        markdown:
          "Personnaliser les tÃ©moins\n\n## Nous utilisons des tÃ©moins\n\nLe respect de votre vie privÃ©e compte pour nous. Nous utilisons des tÃ©moins (ex.Â :Â _cookies_) pour personnaliser nos contenus et faciliter votre expÃ©rience numÃ©rique. Certains tÃ©moins peuvent Ãªtre recueillis avec votre consentement.\n\nShow this message in English\n\nTout accepter\n\nPersonnaliser vos choix\n\n![](https://cdn.cookielaw.org/logos/static/ot_company_logo.png)\n\n## Personnaliser vos choix\n\nLes tÃ©moins (ex.Â :Â _cookies_) sont de petits fichiers dÃ©posÃ©s sur votre appareil. Ils nous permettent de mÃ©moriser des informations sur vos prÃ©fÃ©rences et vos interactions avec notre site. Si vous les autorisez, les informations recueillies seront conservÃ©es pour vos prochaines visites.\n\n\n[Lire notre politique](https://www.desjardins.com/confidentialite/politique-utilisation-temoins/index.jsp)\n\n### CatÃ©gories de tÃ©moins\n\n#### TÃ©moins nÃ©cessaires\n\nCes tÃ©moins sont obligatoires.\n\nCes tÃ©moins vous permettent dâ€™apprÃ©cier toutes les fonctionnalitÃ©s de notre site et dâ€™y naviguer de maniÃ¨re optimale et sÃ©curitaire. Ils nous servent aussi Ã  vous demander votre opinion et Ã  Ã©valuer votre satisfaction.\n\n#### Performance\n\nPerformance\n\nCes tÃ©moins nous permettent dâ€™analyser la navigation sur nos sites pour en amÃ©liorer le fonctionnement.\n\n#### Personnalisation\n\nPersonnalisation\n\nCes tÃ©moins nous permettent de mÃ©moriser vos prÃ©fÃ©rences et de personnaliser les contenus qui vous sont proposÃ©s en fonction de votre navigation et de vos choix antÃ©rieurs.\n\n#### PublicitÃ© ciblÃ©e\n\nPublicitÃ© ciblÃ©e\n\nCes tÃ©moins nous aident Ã  limiter le nombre de fois que vous voyez une publicitÃ©, Ã  personnaliser nos offres et services en fonction de vos centres dâ€™intÃ©rÃªts, Ã  mesurer lâ€™efficacitÃ© dâ€™une campagne publicitaire, etc. Ceux-ci peuvent Ãªtre partagÃ©s avec nos partenaires.\n\nBack Button\n\n### Liste des cookies\n\nSearch Icon\n\nFilter Icon\n\nClear\n\ncheckbox labellabel\n\nApplyCancel\n\nConsentLeg.Interest\n\ncheckbox labellabel\n\ncheckbox labellabel\n\ncheckbox labellabel\n\nTout refuserConfirmer la sÃ©lection\n\n[![Powered by Onetrust](https://cdn.cookielaw.org/logos/static/powered_by_logo.svg)](https://www.onetrust.com/products/cookie-consent/)",
        metadata: {
          title: "Back ButtonSearch IconFilter Icon",
          language: "fr",
          ogLocaleAlternate: [],
          viewport: "width=device-width",
          "next-head-count": "8",
          sourceURL: "https://desjardins-workplace.relevance.studio/fr",
          url: "https://desjardins-workplace.relevance.studio/fr",
          statusCode: 200,
        },
      });

      return prisma.tool.update({
        where: { id: tool.id },
        data: {
          ...content,

          categories: {
            connectOrCreate: categories.map(({ id }) => ({
              where: {
                toolId_categoryId: { toolId: tool.id, categoryId: id },
              },
              create: { category: { connect: { id } } },
            })),
          },

          alternatives: {
            connectOrCreate: alternatives.map(({ id }) => ({
              where: {
                toolId_alternativeId: { toolId: tool.id, alternativeId: id },
              },
              create: { alternative: { connect: { id } } },
            })),
          },
        },
      });
    }),
      // step.run("upload-favicon", async () => {
      //   const { id, slug, website } = tool;
      //   const faviconUrl = await uploadFavicon(
      //     website,
      //     `tools/${slug}/favicon`
      //   );

      //   return prisma.tool.update({
      //     where: { id },
      //     data: { faviconUrl },
      //   });
      // }),

      // step.run("upload-screenshot", async () => {
      //   const { id, slug, website } = tool;
      //   const screenshotUrl = await uploadScreenshot(
      //     website,
      //     `tools/${slug}/screenshot`
      //   );

      //   return prisma.tool.update({
      //     where: { id },
      //     data: { screenshotUrl },
      //   });
      // }),

      // Disconnect from DB
      await step.run("disconnect-from-db", async () => {
        return prisma.$disconnect();
      });

    // Revalidate cache
    await step.run("revalidate-cache", async () => {
      revalidateTag("admin-tools");
      revalidateTag("schedule");
      revalidateTag(`tool-${tool.slug}`);
    });

    // Send email
    await step.run("send-email", async () => {
      if (!tool.submitterEmail) return;

      const to = tool.submitterEmail;
      const subject = `Great news! ${tool.name} is scheduled for publication on ${config.site.name} ðŸŽ‰`;

      return sendEmails({
        to,
        subject,
        react: EmailToolScheduled({ to, subject, tool }),
      });
    });
  }
);
